{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\llnull\\\\Desktop\\\\MangasOSX\\\\MangaSA\\\\mangadex-app\\\\MangasSA\\\\src\\\\pages\\\\Mangas.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Mangas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mangas = () => {\n  _s();\n  const [mangas, setMangas] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const navigate = useNavigate();\n  const itemsPerPage = 24;\n  useEffect(() => {\n    const fetchMangas = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get('https://api.mangadex.org/manga', {\n          params: {\n            limit: itemsPerPage,\n            offset: (currentPage - 1) * itemsPerPage,\n            includes: ['cover_art'],\n            availableTranslatedLanguage: ['pt-br'],\n            order: {\n              title: 'asc'\n            }\n          }\n        });\n        setMangas(response.data.data);\n      } catch (error) {\n        console.error('Error fetching mangas:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMangas();\n  }, [currentPage]);\n  const getCoverUrl = manga => {\n    const coverArt = manga.relationships.find(rel => rel.type === 'cover_art');\n    if (coverArt && coverArt.attributes) {\n      return `https://uploads.mangadex.org/covers/${manga.id}/${coverArt.attributes.fileName}.256.jpg`;\n    }\n    return 'default-cover.jpg';\n  };\n  const getMangaTitle = manga => {\n    return manga.attributes.title['pt-br'] || manga.attributes.title.en || 'Título não disponível';\n  };\n  const getMangaDescription = manga => {\n    return manga.attributes.description['pt-br'] || manga.attributes.description.en || 'Descrição não disponível';\n  };\n  const truncateText = (text, limit) => {\n    if (!text) return ''; // Verifica se o texto é válido\n    if (text.length > limit) {\n      return text.substring(0, limit) + '...';\n    }\n    return text;\n  };\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n  const handleReadClick = mangaId => {\n    navigate(`/manga/${mangaId}/read`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mangas\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Mang\\xE1s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manga-list\",\n        children: mangas.map(manga => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"manga-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"manga-card-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"manga-card-front\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: getCoverUrl(manga),\n                alt: getMangaTitle(manga)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"manga-card-back\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: getMangaTitle(manga)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: truncateText(getMangaDescription(manga), 150)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleReadClick(manga.id),\n                children: \"Ler\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)\n        }, manga.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: currentPage === 1,\n          onClick: () => handlePageChange(currentPage - 1),\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"P\\xE1gina \", currentPage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(currentPage + 1),\n          children: \"Pr\\xF3ximo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Mangas, \"FT5ZihzRqW09L4IQM2FJdAfiXv0=\", false, function () {\n  return [useNavigate];\n});\n_c = Mangas;\nexport default Mangas;\nvar _c;\n$RefreshReg$(_c, \"Mangas\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","Mangas","_s","mangas","setMangas","loading","setLoading","currentPage","setCurrentPage","navigate","itemsPerPage","fetchMangas","response","get","params","limit","offset","includes","availableTranslatedLanguage","order","title","data","error","console","getCoverUrl","manga","coverArt","relationships","find","rel","type","attributes","id","fileName","getMangaTitle","en","getMangaDescription","description","truncateText","text","length","substring","handlePageChange","newPage","handleReadClick","mangaId","className","children","_jsxFileName","lineNumber","columnNumber","map","src","alt","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/llnull/Desktop/MangasOSX/MangaSA/mangadex-app/MangasSA/src/pages/Mangas.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Mangas.css';\r\n\r\nconst Mangas = () => {\r\n  const [mangas, setMangas] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const navigate = useNavigate();\r\n\r\n  const itemsPerPage = 24;\r\n\r\n  useEffect(() => {\r\n    const fetchMangas = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.get('https://api.mangadex.org/manga', {\r\n          params: {\r\n            limit: itemsPerPage,\r\n            offset: (currentPage - 1) * itemsPerPage,\r\n            includes: ['cover_art'],\r\n            availableTranslatedLanguage: ['pt-br'],\r\n            order: {\r\n              title: 'asc'\r\n            }\r\n          }\r\n        });\r\n\r\n        setMangas(response.data.data);\r\n      } catch (error) {\r\n        console.error('Error fetching mangas:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMangas();\r\n  }, [currentPage]);\r\n\r\n  const getCoverUrl = (manga) => {\r\n    const coverArt = manga.relationships.find(rel => rel.type === 'cover_art');\r\n    if (coverArt && coverArt.attributes) {\r\n      return `https://uploads.mangadex.org/covers/${manga.id}/${coverArt.attributes.fileName}.256.jpg`;\r\n    }\r\n    return 'default-cover.jpg';\r\n  };\r\n\r\n  const getMangaTitle = (manga) => {\r\n    return manga.attributes.title['pt-br'] || manga.attributes.title.en || 'Título não disponível';\r\n  };\r\n\r\n  const getMangaDescription = (manga) => {\r\n    return manga.attributes.description['pt-br'] || manga.attributes.description.en || 'Descrição não disponível';\r\n  };\r\n\r\n  const truncateText = (text, limit) => {\r\n    if (!text) return ''; // Verifica se o texto é válido\r\n    if (text.length > limit) {\r\n      return text.substring(0, limit) + '...';\r\n    }\r\n    return text;\r\n  };\r\n\r\n  const handlePageChange = (newPage) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  const handleReadClick = (mangaId) => {\r\n    navigate(`/manga/${mangaId}/read`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mangas\">\r\n      <h2>Lista de Mangás</h2>\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"manga-list\">\r\n            {mangas.map((manga) => (\r\n              <div key={manga.id} className=\"manga-card\">\r\n                <div className=\"manga-card-inner\">\r\n                  <div className=\"manga-card-front\">\r\n                    <img src={getCoverUrl(manga)} alt={getMangaTitle(manga)} />\r\n                  </div>\r\n                  <div className=\"manga-card-back\">\r\n                    <h3>{getMangaTitle(manga)}</h3>\r\n                    <p>{truncateText(getMangaDescription(manga), 150)}</p>\r\n                    <button type=\"button\" onClick={() => handleReadClick(manga.id)}>Ler</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"pagination\">\r\n            <button disabled={currentPage === 1} onClick={() => handlePageChange(currentPage - 1)}>Anterior</button>\r\n            <span>Página {currentPage}</span>\r\n            <button onClick={() => handlePageChange(currentPage + 1)}>Próximo</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mangas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}