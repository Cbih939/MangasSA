{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\llnull\\\\Desktop\\\\MangasOSX\\\\MangaSA\\\\mangadex-app\\\\MangasSA\\\\src\\\\pages\\\\MangaRead.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport './MangaRead.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MangaRead = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [chapters, setChapters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedChapter, setSelectedChapter] = useState('');\n  useEffect(() => {\n    const fetchChapters = async () => {\n      try {\n        const response = await axios.get(`https://api.mangadex.org/manga/${id}/feed`, {\n          params: {\n            translatedLanguage: ['pt-br'],\n            limit: 100,\n            order: {\n              chapter: 'asc'\n            }\n          }\n        });\n        setChapters(response.data.data);\n        if (response.data.data.length > 0) {\n          setSelectedChapter(response.data.data[0].id);\n        }\n      } catch (error) {\n        console.error('Error fetching chapters:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchChapters();\n  }, [id]);\n  const handleChapterChange = event => {\n    setSelectedChapter(event.target.value);\n    navigate(`/manga/${id}/read/${event.target.value}`);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  if (chapters.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No chapters available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manga-read\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cap\\xEDtulos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedChapter,\n      onChange: handleChapterChange,\n      className: \"chapter-select\",\n      children: chapters.map(chapter => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: chapter.id,\n        children: chapter.attributes.title || `Capítulo ${chapter.attributes.chapter}`\n      }, chapter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \":chapterId\",\n        element: /*#__PURE__*/_jsxDEV(ChapterDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(MangaRead, \"EaS1C+BylrNXh0+E2ULuXrZOKOg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = MangaRead;\nconst ChapterDetail = () => {\n  _s2();\n  const {\n    chapterId\n  } = useParams();\n  const [chapter, setChapter] = useState(null);\n  const [pages, setPages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchChapter = async () => {\n      try {\n        const response = await axios.get(`https://api.mangadex.org/chapter/${chapterId}`);\n        setChapter(response.data.data);\n        const pagesResponse = await axios.get(`https://api.mangadex.org/at-home/server/${chapterId}`);\n        const baseUrl = pagesResponse.data.baseUrl;\n        const pageFiles = pagesResponse.data.chapter.data;\n        setPages(pageFiles.map(file => `${baseUrl}/data/${pagesResponse.data.chapter.hash}/${file}`));\n      } catch (error) {\n        console.error('Error fetching chapter:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchChapter();\n  }, [chapterId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  }\n  if (!chapter) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error loading chapter details.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chapter-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: chapter.attributes.title || `Chapter ${chapter.attributes.chapter}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chapter-pages\",\n      children: pages.map((page, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: page,\n        alt: `Page ${index + 1}`,\n        className: \"chapter-page\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s2(ChapterDetail, \"+fWiIzWe+GqHK1k3f7yJTtFGIkI=\", false, function () {\n  return [useParams];\n});\n_c2 = ChapterDetail;\nexport default MangaRead;\nvar _c, _c2;\n$RefreshReg$(_c, \"MangaRead\");\n$RefreshReg$(_c2, \"ChapterDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Routes","Route","axios","jsxDEV","_jsxDEV","MangaRead","_s","id","navigate","chapters","setChapters","loading","setLoading","selectedChapter","setSelectedChapter","fetchChapters","response","get","params","translatedLanguage","limit","order","chapter","data","length","error","console","handleChapterChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","map","attributes","title","path","element","ChapterDetail","_c","_s2","chapterId","setChapter","pages","setPages","fetchChapter","pagesResponse","baseUrl","pageFiles","file","hash","page","index","src","alt","_c2","$RefreshReg$"],"sources":["C:/Users/llnull/Desktop/MangasOSX/MangaSA/mangadex-app/MangasSA/src/pages/MangaRead.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate, Routes, Route } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './MangaRead.css';\r\n\r\nconst MangaRead = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [chapters, setChapters] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedChapter, setSelectedChapter] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchChapters = async () => {\r\n      try {\r\n        const response = await axios.get(`https://api.mangadex.org/manga/${id}/feed`, {\r\n          params: {\r\n            translatedLanguage: ['pt-br'],\r\n            limit: 100,\r\n            order: {\r\n              chapter: 'asc'\r\n            }\r\n          }\r\n        });\r\n        setChapters(response.data.data);\r\n        if (response.data.data.length > 0) {\r\n          setSelectedChapter(response.data.data[0].id);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching chapters:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchChapters();\r\n  }, [id]);\r\n\r\n  const handleChapterChange = (event) => {\r\n    setSelectedChapter(event.target.value);\r\n    navigate(`/manga/${id}/read/${event.target.value}`);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Carregando...</div>;\r\n  }\r\n\r\n  if (chapters.length === 0) {\r\n    return <div>No chapters available.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"manga-read\">\r\n      <h1>Capítulos</h1>\r\n      <select value={selectedChapter} onChange={handleChapterChange} className=\"chapter-select\">\r\n        {chapters.map((chapter) => (\r\n          <option key={chapter.id} value={chapter.id}>\r\n            {chapter.attributes.title || `Capítulo ${chapter.attributes.chapter}`}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <Routes>\r\n        <Route path=\":chapterId\" element={<ChapterDetail />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ChapterDetail = () => {\r\n  const { chapterId } = useParams();\r\n  const [chapter, setChapter] = useState(null);\r\n  const [pages, setPages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchChapter = async () => {\r\n      try {\r\n        const response = await axios.get(`https://api.mangadex.org/chapter/${chapterId}`);\r\n        setChapter(response.data.data);\r\n\r\n        const pagesResponse = await axios.get(`https://api.mangadex.org/at-home/server/${chapterId}`);\r\n        const baseUrl = pagesResponse.data.baseUrl;\r\n        const pageFiles = pagesResponse.data.chapter.data;\r\n        setPages(pageFiles.map(file => `${baseUrl}/data/${pagesResponse.data.chapter.hash}/${file}`));\r\n      } catch (error) {\r\n        console.error('Error fetching chapter:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchChapter();\r\n  }, [chapterId]);\r\n\r\n  if (loading) {\r\n    return <div>Carregando...</div>;\r\n  }\r\n\r\n  if (!chapter) {\r\n    return <div>Error loading chapter details.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"chapter-detail\">\r\n      <h2>{chapter.attributes.title || `Chapter ${chapter.attributes.chapter}`}</h2>\r\n      <div className=\"chapter-pages\">\r\n        {pages.map((page, index) => (\r\n          <img\r\n            key={index}\r\n            src={page}\r\n            alt={`Page ${index + 1}`}\r\n            className=\"chapter-page\"\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MangaRead;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}